rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Rules for the public users collection
    match /artifacts/{appId}/public/data/users/{publicUserId} {
      // Allow authenticated users to read public user data
      allow read: if request.auth != null;

      // Allow creating a new public user document during registration.
      // Requires an authenticated user and validation of role and linked UID.
      allow create: if request.auth != null
                    && (request.resource.data.role == 'member' || request.resource.data.role == 'admin')
                    && request.resource.data.firebaseAuthUid == request.auth.uid;

      // Allow updating the public user document to link the firebaseAuthUid
      // Only allow the authenticated user to update their own public document
      allow update: if request.auth != null
                    && request.auth.uid == request.resource.data.firebaseAuthUid;
    }

    // Rules for the private user profile data
    match /artifacts/{appId}/users/{userId}/profile/data {
      // Allow authenticated users to read their own private profile data
      allow read: if request.auth != null && request.auth.uid == userId;

      // Allow authenticated users to create or update their own private profile data
      // This is used after successful login/registration in LoginPage.js
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Default deny rule for all other documents
    // This is important to prevent unauthorized access to any other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}